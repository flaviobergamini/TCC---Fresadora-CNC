;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 14/02/2017 13:00:34
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$0498	$	_Delay_1us:
;delays.c,7 :: 		void Delay_1us() {
;delays.c,8 :: 		Delay_us(1);
$0498	$3001			MOVLW	1
$0499	$1303			BCF	STATUS, RP1
$049A	$1283			BCF	STATUS, RP0
$049B	$00FA			MOVWF	STACK_10
$049C	$0BFA			DECFSZ	STACK_10, F
$049D	$2C9C			GOTO	$-1
$049E	$0000			NOP
;delays.c,9 :: 		}
$049F	$0008			RETURN
$0448	$	_Delay_5500us:
;delays.c,31 :: 		void Delay_5500us() {
;delays.c,32 :: 		Delay_us(5500);
$0448	$3024			MOVLW	36
$0449	$1303			BCF	STATUS, RP1
$044A	$1283			BCF	STATUS, RP0
$044B	$00FB			MOVWF	STACK_11
$044C	$30FF			MOVLW	255
$044D	$00FA			MOVWF	STACK_10
$044E	$0BFB			DECFSZ	STACK_11, F
$044F	$2C51			GOTO	$+2
$0450	$2C54			GOTO	$+4
$0451	$0BFA			DECFSZ	STACK_10, F
$0452	$2C51			GOTO	$-1
$0453	$2C4E			GOTO	$-5
$0454	$309E			MOVLW	158
$0455	$00FA			MOVWF	STACK_10
$0456	$0BFA			DECFSZ	STACK_10, F
$0457	$2C56			GOTO	$-1
;delays.c,33 :: 		}
$0458	$0008			RETURN
$04A8	$	_Delay_50us:
;delays.c,19 :: 		void Delay_50us() {
;delays.c,20 :: 		Delay_us(50);
$04A8	$3053			MOVLW	83
$04A9	$1303			BCF	STATUS, RP1
$04AA	$1283			BCF	STATUS, RP0
$04AB	$00FA			MOVWF	STACK_10
$04AC	$0BFA			DECFSZ	STACK_10, F
$04AD	$2CAC			GOTO	$-1
;delays.c,21 :: 		}
$04AE	$0008			RETURN
$0432	$	_I2C_Is_Idle:
$0432	$3000			MOVLW	0
$0433	$1303			BCF	STATUS, RP1
$0434	$1683			BSF	STATUS, RP0
$0435	$1914			BTFSC	SSPSTAT, 2
$0436	$3001			MOVLW	1
$0437	$00F1			MOVWF	STACK_1
$0438	$0871			MOVF	STACK_1, 0
$0439	$3A00			XORLW	0
$043A	$1D03			BTFSS	STATUS, Z
$043B	$2C46			GOTO	L_I2C_Is_Idle_0
$043C	$301F			MOVLW	31
$043D	$0511			ANDWF	SSPCON2, 0
$043E	$00F1			MOVWF	STACK_1
$043F	$0871			MOVF	STACK_1, 0
$0440	$3A00			XORLW	0
$0441	$1D03			BTFSS	STATUS, Z
$0442	$2C46			GOTO	L_I2C_Is_Idle_1
$0443	$3001			MOVLW	1
$0444	$00F0			MOVWF	STACK_0
$0445	$0008			RETURN
$0446	$	L_I2C_Is_Idle_1:
$0446	$	L_I2C_Is_Idle_0:
$0446	$01F0			CLRF	STACK_0, 1
$0447	$0008			RETURN
$038F	$	_Lcd8_Cmd:
$038F	$1303			BCF	STATUS, RP1
$0390	$1283			BCF	STATUS, RP0
$0391	$0820			MOVF	lcd8bit_DataAddress, 0
$0392	$0084			MOVWF	FSR
$0393	$0180			CLRF	INDF, 1
$0394	$1683			BSF	STATUS, RP0
$0395	$0829			MOVF	FARG_Lcd8_Cmd+0, 0
$0396	$1903			BTFSC	STATUS, Z
$0397	$2B98			GOTO	L_Lcd8_Cmd_0
$0398	$	L_Lcd8_Cmd_0:
$0398	$1BA9			BTFSC	FARG_Lcd8_Cmd+0, 7
$0399	$1780			BSF	INDF, __LCD8_DB7
$039A	$1B29			BTFSC	FARG_Lcd8_Cmd+0, 6
$039B	$1700			BSF	INDF, __LCD8_DB6
$039C	$1AA9			BTFSC	FARG_Lcd8_Cmd+0, 5
$039D	$1680			BSF	INDF, __LCD8_DB5
$039E	$1A29			BTFSC	FARG_Lcd8_Cmd+0, 4
$039F	$1600			BSF	INDF, __LCD8_DB4
$03A0	$19A9			BTFSC	FARG_Lcd8_Cmd+0, 3
$03A1	$1580			BSF	INDF, __LCD8_DB3
$03A2	$1929			BTFSC	FARG_Lcd8_Cmd+0, 2
$03A3	$1500			BSF	INDF, __LCD8_DB2
$03A4	$18A9			BTFSC	FARG_Lcd8_Cmd+0, 1
$03A5	$1480			BSF	INDF, __LCD8_DB1
$03A6	$1829			BTFSC	FARG_Lcd8_Cmd+0, 0
$03A7	$1400			BSF	INDF, __LCD8_DB0
$03A8	$1283			BCF	STATUS, RP0
$03A9	$0821			MOVF	lcd8bit_CtrlAddress, 0
$03AA	$0084			MOVWF	FSR
$03AB	$1400			BSF	INDF, __LCD8_RS
$03AC	$0822			MOVF	_com, 0
$03AD	$1903			BTFSC	STATUS, Z
$03AE	$2BB0			GOTO	L_Lcd8_Cmd_1
$03AF	$1000			BCF	INDF, __LCD8_RS
$03B0	$	L_Lcd8_Cmd_1:
$03B0	$1500			BSF	INDF, __LCD8_ENABLE
$03B1	$2498			CALL	_Delay_1us
$03B2	$1100			BCF	INDF, __LCD8_ENABLE
$03B3	$0822			MOVF	_com, 0
$03B4	$1903			BTFSC	STATUS, Z
$03B5	$2BB8			GOTO	L_Lcd8_Cmd_2
$03B6	$2448			CALL	_Delay_5500us
$03B7	$2BB9			GOTO	L_Lcd8_Cmd_3
$03B8	$	L_Lcd8_Cmd_2:
$03B8	$24A8			CALL	_Delay_50us
$03B9	$	L_Lcd8_Cmd_3:
$03B9	$0008			RETURN
$03BA	$	_I2C_Start:
$03BA	$1303			BCF	STATUS, RP1
$03BB	$1683			BSF	STATUS, RP0
$03BC	$01A9			CLRF	I2C_Start_j_L0
$03BD	$01AA			CLRF	I2C_Start_j_L0+1
$03BE	$	L_I2C_Start_2:
$03BE	$082A			MOVF	I2C_Start_j_L0+1, 0
$03BF	$3C12			SUBLW	18
$03C0	$1D03			BTFSS	STATUS, Z
$03C1	$2BC4			GOTO	L_I2C_Start_23
$03C2	$0829			MOVF	I2C_Start_j_L0, 0
$03C3	$3C8E			SUBLW	142
$03C4	$	L_I2C_Start_23:
$03C4	$1C03			BTFSS	STATUS, C
$03C5	$2BCE			GOTO	L_I2C_Start_3
$03C6	$2432			CALL	_I2C_Is_Idle
$03C7	$0870			MOVF	STACK_0, 0
$03C8	$1D03			BTFSS	STATUS, Z
$03C9	$2BCE			GOTO	L_I2C_Start_3
$03CA	$	L_I2C_Start_5:
$03CA	$	L_I2C_Start_4:
$03CA	$0AA9			INCF	I2C_Start_j_L0, 1
$03CB	$1903			BTFSC	STATUS, Z
$03CC	$0AAA			INCF	I2C_Start_j_L0+1, 1
$03CD	$2BBE			GOTO	L_I2C_Start_2
$03CE	$	L_I2C_Start_3:
$03CE	$3012			MOVLW	18
$03CF	$022A			SUBWF	I2C_Start_j_L0+1, 0
$03D0	$1D03			BTFSS	STATUS, Z
$03D1	$2BD4			GOTO	L_I2C_Start_24
$03D2	$308F			MOVLW	143
$03D3	$0229			SUBWF	I2C_Start_j_L0, 0
$03D4	$	L_I2C_Start_24:
$03D4	$1C03			BTFSS	STATUS, C
$03D5	$2BD9			GOTO	L_I2C_Start_6
$03D6	$307B			MOVLW	123
$03D7	$00F0			MOVWF	STACK_0
$03D8	$0008			RETURN
$03D9	$	L_I2C_Start_6:
$03D9	$1411			BSF	SSPCON2, 0
$03DA	$	L_I2C_Start_8:
$03DA	$1C11			BTFSS	SSPCON2, 0
$03DB	$2BDE			GOTO	L_I2C_Start_9
$03DC	$0000			NOP
$03DD	$2BDA			GOTO	L_I2C_Start_8
$03DE	$	L_I2C_Start_9:
$03DE	$01F0			CLRF	STACK_0, 1
$03DF	$0008			RETURN
$03FE	$	_I2C_Wr:
$03FE	$1303			BCF	STATUS, RP1
$03FF	$1683			BSF	STATUS, RP0
$0400	$0829			MOVF	FARG_I2C_Wr+0, 0
$0401	$1283			BCF	STATUS, RP0
$0402	$0093			MOVWF	SSPBUF
$0403	$118C			BCF	PIR1, 3
$0404	$	L_I2C_Wr_17:
$0404	$1683			BSF	STATUS, RP0
$0405	$1914			BTFSC	SSPSTAT, 2
$0406	$2C04			GOTO	L_I2C_Wr_17
$0407	$	L_I2C_Wr_18:
$0407	$	L_I2C_Wr_19:
$0407	$1283			BCF	STATUS, RP0
$0408	$1D8C			BTFSS	PIR1, 3
$0409	$2C07			GOTO	L_I2C_Wr_19
$040A	$	L_I2C_Wr_20:
$040A	$3000			MOVLW	0
$040B	$1683			BSF	STATUS, RP0
$040C	$1B11			BTFSC	SSPCON2, 6
$040D	$3001			MOVLW	1
$040E	$00F1			MOVWF	STACK_1
$040F	$0871			MOVF	STACK_1, 0
$0410	$3A00			XORLW	0
$0411	$1D03			BTFSS	STATUS, Z
$0412	$2C15			GOTO	L_I2C_Wr_21
$0413	$01F0			CLRF	STACK_0, 1
$0414	$0008			RETURN
$0415	$	L_I2C_Wr_21:
$0415	$1511			BSF	SSPCON2, 2
$0416	$3002			MOVLW	2
$0417	$00F0			MOVWF	STACK_0
$0418	$0008			RETURN
$04A0	$	_I2C_Repeated_Start:
$04A0	$1303			BCF	STATUS, RP1
$04A1	$1683			BSF	STATUS, RP0
$04A2	$1491			BSF	SSPCON2, 1
$04A3	$	L_I2C_Repeated_Start_10:
$04A3	$1C91			BTFSS	SSPCON2, 1
$04A4	$2CA7			GOTO	L_I2C_Repeated_Start_11
$04A5	$0000			NOP
$04A6	$2CA3			GOTO	L_I2C_Repeated_Start_10
$04A7	$	L_I2C_Repeated_Start_11:
$04A7	$0008			RETURN
$0419	$	_I2C_Rd:
$0419	$1303			BCF	STATUS, RP1
$041A	$1683			BSF	STATUS, RP0
$041B	$1591			BSF	SSPCON2, 3
$041C	$1283			BCF	STATUS, RP0
$041D	$118C			BCF	PIR1, 3
$041E	$	L_I2C_Rd_12:
$041E	$1D8C			BTFSS	PIR1, 3
$041F	$2C1E			GOTO	L_I2C_Rd_12
$0420	$	L_I2C_Rd_13:
$0420	$0813			MOVF	SSPBUF, 0
$0421	$1683			BSF	STATUS, RP0
$0422	$00AA			MOVWF	I2C_Rd_tmp_L0
$0423	$1291			BCF	SSPCON2, 5
$0424	$0829			MOVF	FARG_I2C_Rd+0, 0
$0425	$3A00			XORLW	0
$0426	$1D03			BTFSS	STATUS, Z
$0427	$2C29			GOTO	L_I2C_Rd_14
$0428	$1691			BSF	SSPCON2, 5
$0429	$	L_I2C_Rd_14:
$0429	$1611			BSF	SSPCON2, 4
$042A	$1283			BCF	STATUS, RP0
$042B	$118C			BCF	PIR1, 3
$042C	$	L_I2C_Rd_15:
$042C	$1D8C			BTFSS	PIR1, 3
$042D	$2C2C			GOTO	L_I2C_Rd_15
$042E	$	L_I2C_Rd_16:
$042E	$1683			BSF	STATUS, RP0
$042F	$082A			MOVF	I2C_Rd_tmp_L0, 0
$0430	$00F0			MOVWF	STACK_0
$0431	$0008			RETURN
$04AF	$	_I2C_Stop:
$04AF	$1303			BCF	STATUS, RP1
$04B0	$1683			BSF	STATUS, RP0
$04B1	$1511			BSF	SSPCON2, 2
$04B2	$0008			RETURN
$0359	$	_Lcd8_Chr:
$0359	$2B6B			GOTO	L_Lcd8_Chr_4
$035A	$	L_Lcd8_Chr_6:
$035A	$3080			MOVLW	128
$035B	$1303			BCF	STATUS, RP1
$035C	$1683			BSF	STATUS, RP0
$035D	$00A5			MOVWF	FARG_Lcd8_Chr+0
$035E	$2B7E			GOTO	L_Lcd8_Chr_5
$035F	$	L_Lcd8_Chr_7:
$035F	$30C0			MOVLW	192
$0360	$00A5			MOVWF	FARG_Lcd8_Chr+0
$0361	$2B7E			GOTO	L_Lcd8_Chr_5
$0362	$	L_Lcd8_Chr_8:
$0362	$3094			MOVLW	148
$0363	$00A5			MOVWF	FARG_Lcd8_Chr+0
$0364	$2B7E			GOTO	L_Lcd8_Chr_5
$0365	$	L_Lcd8_Chr_9:
$0365	$30D4			MOVLW	212
$0366	$00A5			MOVWF	FARG_Lcd8_Chr+0
$0367	$2B7E			GOTO	L_Lcd8_Chr_5
$0368	$	L_Lcd8_Chr_10:
$0368	$3080			MOVLW	128
$0369	$00A5			MOVWF	FARG_Lcd8_Chr+0
$036A	$2B7E			GOTO	L_Lcd8_Chr_5
$036B	$	L_Lcd8_Chr_4:
$036B	$1303			BCF	STATUS, RP1
$036C	$1683			BSF	STATUS, RP0
$036D	$0825			MOVF	FARG_Lcd8_Chr+0, 0
$036E	$3A01			XORLW	1
$036F	$1903			BTFSC	STATUS, Z
$0370	$2B5A			GOTO	L_Lcd8_Chr_6
$0371	$0825			MOVF	FARG_Lcd8_Chr+0, 0
$0372	$3A02			XORLW	2
$0373	$1903			BTFSC	STATUS, Z
$0374	$2B5F			GOTO	L_Lcd8_Chr_7
$0375	$0825			MOVF	FARG_Lcd8_Chr+0, 0
$0376	$3A03			XORLW	3
$0377	$1903			BTFSC	STATUS, Z
$0378	$2B62			GOTO	L_Lcd8_Chr_8
$0379	$0825			MOVF	FARG_Lcd8_Chr+0, 0
$037A	$3A04			XORLW	4
$037B	$1903			BTFSC	STATUS, Z
$037C	$2B65			GOTO	L_Lcd8_Chr_9
$037D	$2B68			GOTO	L_Lcd8_Chr_10
$037E	$	L_Lcd8_Chr_5:
$037E	$0326			DECF	FARG_Lcd8_Chr+1, 0
$037F	$00F0			MOVWF	STACK_0
$0380	$0825			MOVF	FARG_Lcd8_Chr+0, 0
$0381	$07F0			ADDWF	STACK_0, 1
$0382	$0870			MOVF	STACK_0, 0
$0383	$00A5			MOVWF	FARG_Lcd8_Chr+0
$0384	$0870			MOVF	STACK_0, 0
$0385	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$0386	$238F			CALL	_Lcd8_Cmd
$0387	$01A2			CLRF	_com, 1
$0388	$1683			BSF	STATUS, RP0
$0389	$0827			MOVF	FARG_Lcd8_Chr+2, 0
$038A	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$038B	$238F			CALL	_Lcd8_Cmd
$038C	$3001			MOVLW	1
$038D	$00A2			MOVWF	_com
$038E	$0008			RETURN
$048E	$	_I2C_Init:
$048E	$1303			BCF	STATUS, RP1
$048F	$1683			BSF	STATUS, RP0
$0490	$1314			BCF	SSPSTAT, 6
$0491	$1394			BCF	SSPSTAT, 7
$0492	$1607			BSF	TRISC, 4
$0493	$1587			BSF	TRISC, 3
$0494	$3038			MOVLW	56
$0495	$1283			BCF	STATUS, RP0
$0496	$0094			MOVWF	SSPCON
$0497	$0008			RETURN
$02BA	$	_ds1307_leitura:
;Controle_Fresadora_CNC.c,28 :: 		void ds1307_leitura() {  //Função para leitura no DS1307
;Controle_Fresadora_CNC.c,29 :: 		I2C_Start();           //Inicializa a comunicação I2C
$02BA	$23BA			CALL	_I2C_Start
;Controle_Fresadora_CNC.c,30 :: 		I2C_Wr(0xD0);          //Comando de Escrita para o RTC
$02BB	$30D0			MOVLW	208
$02BC	$00A9			MOVWF	FARG_I2C_Wr+0
$02BD	$23FE			CALL	_I2C_Wr
;Controle_Fresadora_CNC.c,31 :: 		I2C_Wr(0x00);          //Endereço 00 início da leitura
$02BE	$01A9			CLRF	FARG_I2C_Wr+0, 1
$02BF	$23FE			CALL	_I2C_Wr
;Controle_Fresadora_CNC.c,32 :: 		I2C_Repeated_Start();  //Reinicializa a comunicação I2C, procedimento obrigatório
$02C0	$24A0			CALL	_I2C_Repeated_Start
;Controle_Fresadora_CNC.c,33 :: 		I2C_Wr(0xD1);          //Comando para a leitura do RTC
$02C1	$30D1			MOVLW	209
$02C2	$00A9			MOVWF	FARG_I2C_Wr+0
$02C3	$23FE			CALL	_I2C_Wr
;Controle_Fresadora_CNC.c,34 :: 		segundo = I2C_Rd(1);   //Faz a leitura do endereço 01
$02C4	$3001			MOVLW	1
$02C5	$00A9			MOVWF	FARG_I2C_Rd+0
$02C6	$2419			CALL	_I2C_Rd
$02C7	$0870			MOVF	STACK_0, 0
$02C8	$1283			BCF	STATUS, RP0
$02C9	$00A3			MOVWF	_segundo
;Controle_Fresadora_CNC.c,35 :: 		minuto = I2C_Rd(1);    //Faz a leitura do endereço 02
$02CA	$3001			MOVLW	1
$02CB	$1683			BSF	STATUS, RP0
$02CC	$00A9			MOVWF	FARG_I2C_Rd+0
$02CD	$2419			CALL	_I2C_Rd
$02CE	$0870			MOVF	STACK_0, 0
$02CF	$1283			BCF	STATUS, RP0
$02D0	$00A4			MOVWF	_minuto
;Controle_Fresadora_CNC.c,36 :: 		hora = I2C_Rd(1);      //Faz a leitura do endereço 03
$02D1	$3001			MOVLW	1
$02D2	$1683			BSF	STATUS, RP0
$02D3	$00A9			MOVWF	FARG_I2C_Rd+0
$02D4	$2419			CALL	_I2C_Rd
$02D5	$0870			MOVF	STACK_0, 0
$02D6	$1283			BCF	STATUS, RP0
$02D7	$00A5			MOVWF	_hora
;Controle_Fresadora_CNC.c,37 :: 		semana = I2C_Rd(1);    //Faz a leitura do endereço 04
$02D8	$3001			MOVLW	1
$02D9	$1683			BSF	STATUS, RP0
$02DA	$00A9			MOVWF	FARG_I2C_Rd+0
$02DB	$2419			CALL	_I2C_Rd
$02DC	$0870			MOVF	STACK_0, 0
$02DD	$1283			BCF	STATUS, RP0
$02DE	$00A6			MOVWF	_semana
;Controle_Fresadora_CNC.c,38 :: 		dia = I2C_Rd(1);       //Faz a leitura do endereço 05
$02DF	$3001			MOVLW	1
$02E0	$1683			BSF	STATUS, RP0
$02E1	$00A9			MOVWF	FARG_I2C_Rd+0
$02E2	$2419			CALL	_I2C_Rd
$02E3	$0870			MOVF	STACK_0, 0
$02E4	$1283			BCF	STATUS, RP0
$02E5	$00A7			MOVWF	_dia
;Controle_Fresadora_CNC.c,39 :: 		mes = I2C_Rd(1);       //Faz a leitura do endereço 06
$02E6	$3001			MOVLW	1
$02E7	$1683			BSF	STATUS, RP0
$02E8	$00A9			MOVWF	FARG_I2C_Rd+0
$02E9	$2419			CALL	_I2C_Rd
$02EA	$0870			MOVF	STACK_0, 0
$02EB	$1283			BCF	STATUS, RP0
$02EC	$00A8			MOVWF	_mes
;Controle_Fresadora_CNC.c,40 :: 		ano = I2C_Rd(0);       //Faz a leitura do endereço 07
$02ED	$1683			BSF	STATUS, RP0
$02EE	$01A9			CLRF	FARG_I2C_Rd+0, 1
$02EF	$2419			CALL	_I2C_Rd
$02F0	$0870			MOVF	STACK_0, 0
$02F1	$1283			BCF	STATUS, RP0
$02F2	$00A9			MOVWF	_ano
;Controle_Fresadora_CNC.c,41 :: 		I2C_Stop();            //Finaliza a comunicação I2C
$02F3	$24AF			CALL	_I2C_Stop
;Controle_Fresadora_CNC.c,42 :: 		}
$02F4	$0008			RETURN
$03E0	$	_Lcd8_Out:
$03E0	$1303			BCF	STATUS, RP1
$03E1	$1683			BSF	STATUS, RP0
$03E2	$01A3			CLRF	Lcd8_Out_i_L0, 1
$03E3	$0822			MOVF	FARG_Lcd8_Out+2, 0
$03E4	$0084			MOVWF	FSR
$03E5	$0800			MOVF	INDF, 0
$03E6	$00A4			MOVWF	Lcd8_Out_j_L0
$03E7	$	L_Lcd8_Out_11:
$03E7	$0824			MOVF	Lcd8_Out_j_L0, 0
$03E8	$1903			BTFSC	STATUS, Z
$03E9	$2BFD			GOTO	L_Lcd8_Out_12
$03EA	$0820			MOVF	FARG_Lcd8_Out+0, 0
$03EB	$00A5			MOVWF	FARG_Lcd8_Chr+0
$03EC	$0823			MOVF	Lcd8_Out_i_L0, 0
$03ED	$0721			ADDWF	FARG_Lcd8_Out+1, 0
$03EE	$00A6			MOVWF	FARG_Lcd8_Chr+1
$03EF	$0823			MOVF	Lcd8_Out_i_L0, 0
$03F0	$0722			ADDWF	FARG_Lcd8_Out+2, 0
$03F1	$0084			MOVWF	FSR
$03F2	$0800			MOVF	INDF, 0
$03F3	$00A7			MOVWF	FARG_Lcd8_Chr+2
$03F4	$2359			CALL	_Lcd8_Chr
$03F5	$1683			BSF	STATUS, RP0
$03F6	$0AA3			INCF	Lcd8_Out_i_L0, 1
$03F7	$0823			MOVF	Lcd8_Out_i_L0, 0
$03F8	$0722			ADDWF	FARG_Lcd8_Out+2, 0
$03F9	$0084			MOVWF	FSR
$03FA	$0800			MOVF	INDF, 0
$03FB	$00A4			MOVWF	Lcd8_Out_j_L0
$03FC	$2BE7			GOTO	L_Lcd8_Out_11
$03FD	$	L_Lcd8_Out_12:
$03FD	$0008			RETURN
$0459	$	_Usart_Write:
$0459	$	L_Usart_Write_3:
$0459	$3000			MOVLW	0
$045A	$1303			BCF	STATUS, RP1
$045B	$1683			BSF	STATUS, RP0
$045C	$1898			BTFSC	TXSTA, 1
$045D	$3001			MOVLW	1
$045E	$00F1			MOVWF	STACK_1
$045F	$0871			MOVF	STACK_1, 0
$0460	$3A00			XORLW	0
$0461	$1D03			BTFSS	STATUS, Z
$0462	$2C65			GOTO	L_Usart_Write_4
$0463	$0000			NOP
$0464	$2C59			GOTO	L_Usart_Write_3
$0465	$	L_Usart_Write_4:
$0465	$1283			BCF	STATUS, RP0
$0466	$086F			MOVF	FARG_Usart_Write+0, 0
$0467	$0099			MOVWF	TXREG
$0468	$0008			RETURN
$0488	$	_ds1307_init:
;Controle_Fresadora_CNC.c,9 :: 		void ds1307_init(void)
;Controle_Fresadora_CNC.c,11 :: 		I2C_Init(100000); //Inicializa a I2C com frequência de 100KHz
$0488	$3032			MOVLW	50
$0489	$1303			BCF	STATUS, RP1
$048A	$1683			BSF	STATUS, RP0
$048B	$0093			MOVWF	SSPADD
$048C	$248E			CALL	_I2C_Init
;Controle_Fresadora_CNC.c,12 :: 		}
$048D	$0008			RETURN
$0331	$	_ds1307_escreve:
;Controle_Fresadora_CNC.c,14 :: 		void ds1307_escreve() { //Função para escrita no DS1307
;Controle_Fresadora_CNC.c,15 :: 		I2C_Start();      //Inicializa a comunicação I2C
$0331	$23BA			CALL	_I2C_Start
;Controle_Fresadora_CNC.c,16 :: 		I2C_Wr(0xD0);     //Comando de Escrita para o RTC
$0332	$30D0			MOVLW	208
$0333	$00A9			MOVWF	FARG_I2C_Wr+0
$0334	$23FE			CALL	_I2C_Wr
;Controle_Fresadora_CNC.c,17 :: 		I2C_Wr(0x00);     //Endereço onde será inicializada a programção do relógio, neste caso é o endereço dos segundos
$0335	$01A9			CLRF	FARG_I2C_Wr+0, 1
$0336	$23FE			CALL	_I2C_Wr
;Controle_Fresadora_CNC.c,18 :: 		I2C_Wr(0x00);     //Atualiza segundos com 00
$0337	$01A9			CLRF	FARG_I2C_Wr+0, 1
$0338	$23FE			CALL	_I2C_Wr
;Controle_Fresadora_CNC.c,19 :: 		I2C_Wr(minuto);   //Atualiza minutos
$0339	$1283			BCF	STATUS, RP0
$033A	$0824			MOVF	_minuto, 0
$033B	$1683			BSF	STATUS, RP0
$033C	$00A9			MOVWF	FARG_I2C_Wr+0
$033D	$23FE			CALL	_I2C_Wr
;Controle_Fresadora_CNC.c,20 :: 		I2C_Wr(hora);     //Atualiza horas
$033E	$1283			BCF	STATUS, RP0
$033F	$0825			MOVF	_hora, 0
$0340	$1683			BSF	STATUS, RP0
$0341	$00A9			MOVWF	FARG_I2C_Wr+0
$0342	$23FE			CALL	_I2C_Wr
;Controle_Fresadora_CNC.c,21 :: 		I2C_Wr(semana);     //Atualiza o dia da semana
$0343	$1283			BCF	STATUS, RP0
$0344	$0826			MOVF	_semana, 0
$0345	$1683			BSF	STATUS, RP0
$0346	$00A9			MOVWF	FARG_I2C_Wr+0
$0347	$23FE			CALL	_I2C_Wr
;Controle_Fresadora_CNC.c,22 :: 		I2C_Wr(dia);      //Atualiza o dia do mês
$0348	$1283			BCF	STATUS, RP0
$0349	$0827			MOVF	_dia, 0
$034A	$1683			BSF	STATUS, RP0
$034B	$00A9			MOVWF	FARG_I2C_Wr+0
$034C	$23FE			CALL	_I2C_Wr
;Controle_Fresadora_CNC.c,23 :: 		I2C_Wr(mes);      //Atualiza o mês
$034D	$1283			BCF	STATUS, RP0
$034E	$0828			MOVF	_mes, 0
$034F	$1683			BSF	STATUS, RP0
$0350	$00A9			MOVWF	FARG_I2C_Wr+0
$0351	$23FE			CALL	_I2C_Wr
;Controle_Fresadora_CNC.c,24 :: 		I2C_Wr(ano);     //Atualiza o ano
$0352	$1283			BCF	STATUS, RP0
$0353	$0829			MOVF	_ano, 0
$0354	$1683			BSF	STATUS, RP0
$0355	$00A9			MOVWF	FARG_I2C_Wr+0
$0356	$23FE			CALL	_I2C_Wr
;Controle_Fresadora_CNC.c,25 :: 		I2C_Stop();       //Finaliza a comunicação I2C
$0357	$24AF			CALL	_I2C_Stop
;Controle_Fresadora_CNC.c,26 :: 		}
$0358	$0008			RETURN
$01AE	$	_horario:
;Controle_Fresadora_CNC.c,114 :: 		void horario()
;Controle_Fresadora_CNC.c,116 :: 		ds1307_leitura();  //Chama a função para leitura do DS1307
$01AE	$22BA			CALL	_ds1307_leitura
;Controle_Fresadora_CNC.c,118 :: 		Lcd8_Chr(1,7,((hora & 0xF0) >> 4) + 48);
$01AF	$3001			MOVLW	1
$01B0	$00A5			MOVWF	FARG_Lcd8_Chr+0
$01B1	$3007			MOVLW	7
$01B2	$00A6			MOVWF	FARG_Lcd8_Chr+1
$01B3	$30F0			MOVLW	240
$01B4	$1283			BCF	STATUS, RP0
$01B5	$0525			ANDWF	_hora, 0
$01B6	$1683			BSF	STATUS, RP0
$01B7	$00A7			MOVWF	FARG_Lcd8_Chr+2
$01B8	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$01B9	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$01BA	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$01BB	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$01BC	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$01BD	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$01BE	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$01BF	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$01C0	$3030			MOVLW	48
$01C1	$07A7			ADDWF	FARG_Lcd8_Chr+2, 1
$01C2	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,119 :: 		Lcd8_Chr(1,8,(hora & 0x0F) + 48);
$01C3	$3001			MOVLW	1
$01C4	$1683			BSF	STATUS, RP0
$01C5	$00A5			MOVWF	FARG_Lcd8_Chr+0
$01C6	$3008			MOVLW	8
$01C7	$00A6			MOVWF	FARG_Lcd8_Chr+1
$01C8	$300F			MOVLW	15
$01C9	$1283			BCF	STATUS, RP0
$01CA	$0525			ANDWF	_hora, 0
$01CB	$1683			BSF	STATUS, RP0
$01CC	$00A7			MOVWF	FARG_Lcd8_Chr+2
$01CD	$3030			MOVLW	48
$01CE	$07A7			ADDWF	FARG_Lcd8_Chr+2, 1
$01CF	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,120 :: 		Lcd8_Chr(1,9,':');
$01D0	$3001			MOVLW	1
$01D1	$1683			BSF	STATUS, RP0
$01D2	$00A5			MOVWF	FARG_Lcd8_Chr+0
$01D3	$3009			MOVLW	9
$01D4	$00A6			MOVWF	FARG_Lcd8_Chr+1
$01D5	$303A			MOVLW	58
$01D6	$00A7			MOVWF	FARG_Lcd8_Chr+2
$01D7	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,121 :: 		Lcd8_Chr(1,10,((minuto & 0xF0) >> 4) + 48);
$01D8	$3001			MOVLW	1
$01D9	$1683			BSF	STATUS, RP0
$01DA	$00A5			MOVWF	FARG_Lcd8_Chr+0
$01DB	$300A			MOVLW	10
$01DC	$00A6			MOVWF	FARG_Lcd8_Chr+1
$01DD	$30F0			MOVLW	240
$01DE	$1283			BCF	STATUS, RP0
$01DF	$0524			ANDWF	_minuto, 0
$01E0	$1683			BSF	STATUS, RP0
$01E1	$00A7			MOVWF	FARG_Lcd8_Chr+2
$01E2	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$01E3	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$01E4	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$01E5	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$01E6	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$01E7	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$01E8	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$01E9	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$01EA	$3030			MOVLW	48
$01EB	$07A7			ADDWF	FARG_Lcd8_Chr+2, 1
$01EC	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,122 :: 		Lcd8_Chr(1,11,(minuto & 0x0F) + 48);
$01ED	$3001			MOVLW	1
$01EE	$1683			BSF	STATUS, RP0
$01EF	$00A5			MOVWF	FARG_Lcd8_Chr+0
$01F0	$300B			MOVLW	11
$01F1	$00A6			MOVWF	FARG_Lcd8_Chr+1
$01F2	$300F			MOVLW	15
$01F3	$1283			BCF	STATUS, RP0
$01F4	$0524			ANDWF	_minuto, 0
$01F5	$1683			BSF	STATUS, RP0
$01F6	$00A7			MOVWF	FARG_Lcd8_Chr+2
$01F7	$3030			MOVLW	48
$01F8	$07A7			ADDWF	FARG_Lcd8_Chr+2, 1
$01F9	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,123 :: 		Lcd8_Chr(1,12,':');
$01FA	$3001			MOVLW	1
$01FB	$1683			BSF	STATUS, RP0
$01FC	$00A5			MOVWF	FARG_Lcd8_Chr+0
$01FD	$300C			MOVLW	12
$01FE	$00A6			MOVWF	FARG_Lcd8_Chr+1
$01FF	$303A			MOVLW	58
$0200	$00A7			MOVWF	FARG_Lcd8_Chr+2
$0201	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,124 :: 		Lcd8_Chr(1,13,((segundo & 0xF0) >> 4) + 48);
$0202	$3001			MOVLW	1
$0203	$1683			BSF	STATUS, RP0
$0204	$00A5			MOVWF	FARG_Lcd8_Chr+0
$0205	$300D			MOVLW	13
$0206	$00A6			MOVWF	FARG_Lcd8_Chr+1
$0207	$30F0			MOVLW	240
$0208	$1283			BCF	STATUS, RP0
$0209	$0523			ANDWF	_segundo, 0
$020A	$1683			BSF	STATUS, RP0
$020B	$00A7			MOVWF	FARG_Lcd8_Chr+2
$020C	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$020D	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$020E	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$020F	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$0210	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$0211	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$0212	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$0213	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$0214	$3030			MOVLW	48
$0215	$07A7			ADDWF	FARG_Lcd8_Chr+2, 1
$0216	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,125 :: 		Lcd8_Chr(1,14,(segundo & 0x0F) + 48);
$0217	$3001			MOVLW	1
$0218	$1683			BSF	STATUS, RP0
$0219	$00A5			MOVWF	FARG_Lcd8_Chr+0
$021A	$300E			MOVLW	14
$021B	$00A6			MOVWF	FARG_Lcd8_Chr+1
$021C	$300F			MOVLW	15
$021D	$1283			BCF	STATUS, RP0
$021E	$0523			ANDWF	_segundo, 0
$021F	$1683			BSF	STATUS, RP0
$0220	$00A7			MOVWF	FARG_Lcd8_Chr+2
$0221	$3030			MOVLW	48
$0222	$07A7			ADDWF	FARG_Lcd8_Chr+2, 1
$0223	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,127 :: 		Lcd8_Chr(2,7,((dia & 0xF0) >> 4) + 48);
$0224	$3002			MOVLW	2
$0225	$1683			BSF	STATUS, RP0
$0226	$00A5			MOVWF	FARG_Lcd8_Chr+0
$0227	$3007			MOVLW	7
$0228	$00A6			MOVWF	FARG_Lcd8_Chr+1
$0229	$30F0			MOVLW	240
$022A	$1283			BCF	STATUS, RP0
$022B	$0527			ANDWF	_dia, 0
$022C	$1683			BSF	STATUS, RP0
$022D	$00A7			MOVWF	FARG_Lcd8_Chr+2
$022E	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$022F	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$0230	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$0231	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$0232	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$0233	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$0234	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$0235	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$0236	$3030			MOVLW	48
$0237	$07A7			ADDWF	FARG_Lcd8_Chr+2, 1
$0238	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,128 :: 		Lcd8_Chr(2,8,(dia & 0x0F) + 48);
$0239	$3002			MOVLW	2
$023A	$1683			BSF	STATUS, RP0
$023B	$00A5			MOVWF	FARG_Lcd8_Chr+0
$023C	$3008			MOVLW	8
$023D	$00A6			MOVWF	FARG_Lcd8_Chr+1
$023E	$300F			MOVLW	15
$023F	$1283			BCF	STATUS, RP0
$0240	$0527			ANDWF	_dia, 0
$0241	$1683			BSF	STATUS, RP0
$0242	$00A7			MOVWF	FARG_Lcd8_Chr+2
$0243	$3030			MOVLW	48
$0244	$07A7			ADDWF	FARG_Lcd8_Chr+2, 1
$0245	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,129 :: 		Lcd8_Chr(2,9,'/');
$0246	$3002			MOVLW	2
$0247	$1683			BSF	STATUS, RP0
$0248	$00A5			MOVWF	FARG_Lcd8_Chr+0
$0249	$3009			MOVLW	9
$024A	$00A6			MOVWF	FARG_Lcd8_Chr+1
$024B	$302F			MOVLW	47
$024C	$00A7			MOVWF	FARG_Lcd8_Chr+2
$024D	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,130 :: 		Lcd8_Chr(2,10,((mes & 0xF0) >> 4) + 48);
$024E	$3002			MOVLW	2
$024F	$1683			BSF	STATUS, RP0
$0250	$00A5			MOVWF	FARG_Lcd8_Chr+0
$0251	$300A			MOVLW	10
$0252	$00A6			MOVWF	FARG_Lcd8_Chr+1
$0253	$30F0			MOVLW	240
$0254	$1283			BCF	STATUS, RP0
$0255	$0528			ANDWF	_mes, 0
$0256	$1683			BSF	STATUS, RP0
$0257	$00A7			MOVWF	FARG_Lcd8_Chr+2
$0258	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$0259	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$025A	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$025B	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$025C	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$025D	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$025E	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$025F	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$0260	$3030			MOVLW	48
$0261	$07A7			ADDWF	FARG_Lcd8_Chr+2, 1
$0262	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,131 :: 		Lcd8_Chr(2,11,(mes & 0x0F) + 48);
$0263	$3002			MOVLW	2
$0264	$1683			BSF	STATUS, RP0
$0265	$00A5			MOVWF	FARG_Lcd8_Chr+0
$0266	$300B			MOVLW	11
$0267	$00A6			MOVWF	FARG_Lcd8_Chr+1
$0268	$300F			MOVLW	15
$0269	$1283			BCF	STATUS, RP0
$026A	$0528			ANDWF	_mes, 0
$026B	$1683			BSF	STATUS, RP0
$026C	$00A7			MOVWF	FARG_Lcd8_Chr+2
$026D	$3030			MOVLW	48
$026E	$07A7			ADDWF	FARG_Lcd8_Chr+2, 1
$026F	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,132 :: 		Lcd8_Chr(2,12,'/');
$0270	$3002			MOVLW	2
$0271	$1683			BSF	STATUS, RP0
$0272	$00A5			MOVWF	FARG_Lcd8_Chr+0
$0273	$300C			MOVLW	12
$0274	$00A6			MOVWF	FARG_Lcd8_Chr+1
$0275	$302F			MOVLW	47
$0276	$00A7			MOVWF	FARG_Lcd8_Chr+2
$0277	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,133 :: 		Lcd8_Chr(2,13,((ano & 0xF0) >> 4) + 48);
$0278	$3002			MOVLW	2
$0279	$1683			BSF	STATUS, RP0
$027A	$00A5			MOVWF	FARG_Lcd8_Chr+0
$027B	$300D			MOVLW	13
$027C	$00A6			MOVWF	FARG_Lcd8_Chr+1
$027D	$30F0			MOVLW	240
$027E	$1283			BCF	STATUS, RP0
$027F	$0529			ANDWF	_ano, 0
$0280	$1683			BSF	STATUS, RP0
$0281	$00A7			MOVWF	FARG_Lcd8_Chr+2
$0282	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$0283	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$0284	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$0285	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$0286	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$0287	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$0288	$0CA7			RRF	FARG_Lcd8_Chr+2, 1
$0289	$13A7			BCF	FARG_Lcd8_Chr+2, 7
$028A	$3030			MOVLW	48
$028B	$07A7			ADDWF	FARG_Lcd8_Chr+2, 1
$028C	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,134 :: 		Lcd8_Chr(2,14,(ano & 0x0F) + 48);
$028D	$3002			MOVLW	2
$028E	$1683			BSF	STATUS, RP0
$028F	$00A5			MOVWF	FARG_Lcd8_Chr+0
$0290	$300E			MOVLW	14
$0291	$00A6			MOVWF	FARG_Lcd8_Chr+1
$0292	$300F			MOVLW	15
$0293	$1283			BCF	STATUS, RP0
$0294	$0529			ANDWF	_ano, 0
$0295	$1683			BSF	STATUS, RP0
$0296	$00A7			MOVWF	FARG_Lcd8_Chr+2
$0297	$3030			MOVLW	48
$0298	$07A7			ADDWF	FARG_Lcd8_Chr+2, 1
$0299	$2359			CALL	_Lcd8_Chr
;Controle_Fresadora_CNC.c,136 :: 		delay_ms(100);
$029A	$3003			MOVLW	3
$029B	$00FC			MOVWF	STACK_12
$029C	$30FF			MOVLW	255
$029D	$00FB			MOVWF	STACK_11
$029E	$30FF			MOVLW	255
$029F	$00FA			MOVWF	STACK_10
$02A0	$0BFC			DECFSZ	STACK_12, F
$02A1	$2AA3			GOTO	$+2
$02A2	$2AAA			GOTO	$+8
$02A3	$0BFB			DECFSZ	STACK_11, F
$02A4	$2AA6			GOTO	$+2
$02A5	$2AA9			GOTO	$+4
$02A6	$0BFA			DECFSZ	STACK_10, F
$02A7	$2AA6			GOTO	$-1
$02A8	$2AA3			GOTO	$-5
$02A9	$2AA0			GOTO	$-9
$02AA	$308C			MOVLW	140
$02AB	$00FB			MOVWF	STACK_11
$02AC	$30FF			MOVLW	255
$02AD	$00FA			MOVWF	STACK_10
$02AE	$0BFB			DECFSZ	STACK_11, F
$02AF	$2AB1			GOTO	$+2
$02B0	$2AB4			GOTO	$+4
$02B1	$0BFA			DECFSZ	STACK_10, F
$02B2	$2AB1			GOTO	$-1
$02B3	$2AAE			GOTO	$-5
$02B4	$30A1			MOVLW	161
$02B5	$00FA			MOVWF	STACK_10
$02B6	$0BFA			DECFSZ	STACK_10, F
$02B7	$2AB6			GOTO	$-1
$02B8	$0000			NOP
;Controle_Fresadora_CNC.c,137 :: 		}
$02B9	$0008			RETURN
$0479	$	GlobalIniControle_Fresadora_CNC:
$0479	$3040			MOVLW	64
$047A	$1303			BCF	STATUS, RP1
$047B	$1283			BCF	STATUS, RP0
$047C	$00A4			MOVWF	_minuto+0
$047D	$3013			MOVLW	19
$047E	$00A5			MOVWF	_hora+0
$047F	$3004			MOVLW	4
$0480	$00A6			MOVWF	_semana+0
$0481	$3023			MOVLW	35
$0482	$00A7			MOVWF	_dia+0
$0483	$3011			MOVLW	17
$0484	$00A8			MOVWF	_mes+0
$0485	$3016			MOVLW	22
$0486	$00A9			MOVWF	_ano+0
$0487	$0008			RETURN
$0469	$	_Usart_Init:
$0469	$1303			BCF	STATUS, RP1
$046A	$1683			BSF	STATUS, RP0
$046B	$1698			BSF	TXSTA, 5
$046C	$3090			MOVLW	144
$046D	$1283			BCF	STATUS, RP0
$046E	$0098			MOVWF	RCSTA
$046F	$1683			BSF	STATUS, RP0
$0470	$1787			BSF	TRISC, 7
$0471	$1307			BCF	TRISC, 6
$0472	$	L_Usart_Init_0:
$0472	$1283			BCF	STATUS, RP0
$0473	$1E8C			BTFSS	PIR1, 5
$0474	$2C78			GOTO	L_Usart_Init_1
$0475	$081A			MOVF	RCREG, 0
$0476	$00EF			MOVWF	Usart_Init_tmp_L0
$0477	$2C72			GOTO	L_Usart_Init_0
$0478	$	L_Usart_Init_1:
$0478	$0008			RETURN
$02F5	$	_Lcd8_Init:
$02F5	$2448			CALL	_Delay_5500us
$02F6	$2448			CALL	_Delay_5500us
$02F7	$2448			CALL	_Delay_5500us
$02F8	$1683			BSF	STATUS, RP0
$02F9	$0821			MOVF	FARG_Lcd8_Init+1, 0
$02FA	$1283			BCF	STATUS, RP0
$02FB	$00A0			MOVWF	lcd8bit_DataAddress
$02FC	$1683			BSF	STATUS, RP0
$02FD	$0821			MOVF	FARG_Lcd8_Init+1, 0
$02FE	$0084			MOVWF	FSR
$02FF	$1784			BSF	FSR, 7
$0300	$0180			CLRF	INDF, 1
$0301	$0820			MOVF	FARG_Lcd8_Init+0, 0
$0302	$1283			BCF	STATUS, RP0
$0303	$00A1			MOVWF	lcd8bit_CtrlAddress
$0304	$1683			BSF	STATUS, RP0
$0305	$0820			MOVF	FARG_Lcd8_Init+0, 0
$0306	$0084			MOVWF	FSR
$0307	$1080			BCF	INDF, __LCD8_RW
$0308	$1784			BSF	FSR, 7
$0309	$1000			BCF	INDF, __LCD8_RS
$030A	$1080			BCF	INDF, __LCD8_RW
$030B	$1100			BCF	INDF, __LCD8_ENABLE
$030C	$1384			BCF	FSR, 7
$030D	$3001			MOVLW	1
$030E	$1283			BCF	STATUS, RP0
$030F	$00A2			MOVWF	_com
$0310	$3030			MOVLW	48
$0311	$1683			BSF	STATUS, RP0
$0312	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$0313	$238F			CALL	_Lcd8_Cmd
$0314	$3030			MOVLW	48
$0315	$1683			BSF	STATUS, RP0
$0316	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$0317	$238F			CALL	_Lcd8_Cmd
$0318	$3030			MOVLW	48
$0319	$1683			BSF	STATUS, RP0
$031A	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$031B	$238F			CALL	_Lcd8_Cmd
$031C	$3038			MOVLW	56
$031D	$1683			BSF	STATUS, RP0
$031E	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$031F	$238F			CALL	_Lcd8_Cmd
$0320	$3008			MOVLW	8
$0321	$1683			BSF	STATUS, RP0
$0322	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$0323	$238F			CALL	_Lcd8_Cmd
$0324	$3001			MOVLW	1
$0325	$1683			BSF	STATUS, RP0
$0326	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$0327	$238F			CALL	_Lcd8_Cmd
$0328	$3006			MOVLW	6
$0329	$1683			BSF	STATUS, RP0
$032A	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$032B	$238F			CALL	_Lcd8_Cmd
$032C	$300C			MOVLW	12
$032D	$1683			BSF	STATUS, RP0
$032E	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$032F	$238F			CALL	_Lcd8_Cmd
$0330	$0008			RETURN
$0004	$	_main:
$0004	$2479			CALL	GlobalIniControle_Fresadora_CNC
$0005	$3046			MOVLW	70
$0006	$00AA			MOVWF	lstr1_Controle_Fresadora_CNC+0
$0007	$3072			MOVLW	114
$0008	$00AB			MOVWF	lstr1_Controle_Fresadora_CNC+1
$0009	$3065			MOVLW	101
$000A	$00AC			MOVWF	lstr1_Controle_Fresadora_CNC+2
$000B	$3073			MOVLW	115
$000C	$00AD			MOVWF	lstr1_Controle_Fresadora_CNC+3
$000D	$3061			MOVLW	97
$000E	$00AE			MOVWF	lstr1_Controle_Fresadora_CNC+4
$000F	$3064			MOVLW	100
$0010	$00AF			MOVWF	lstr1_Controle_Fresadora_CNC+5
$0011	$306F			MOVLW	111
$0012	$00B0			MOVWF	lstr1_Controle_Fresadora_CNC+6
$0013	$3072			MOVLW	114
$0014	$00B1			MOVWF	lstr1_Controle_Fresadora_CNC+7
$0015	$3061			MOVLW	97
$0016	$00B2			MOVWF	lstr1_Controle_Fresadora_CNC+8
$0017	$3020			MOVLW	32
$0018	$00B3			MOVWF	lstr1_Controle_Fresadora_CNC+9
$0019	$3043			MOVLW	67
$001A	$00B4			MOVWF	lstr1_Controle_Fresadora_CNC+10
$001B	$304E			MOVLW	78
$001C	$00B5			MOVWF	lstr1_Controle_Fresadora_CNC+11
$001D	$3043			MOVLW	67
$001E	$00B6			MOVWF	lstr1_Controle_Fresadora_CNC+12
$001F	$01B7			CLRF	lstr1_Controle_Fresadora_CNC+13
$0020	$3046			MOVLW	70
$0021	$00B8			MOVWF	lstr2_Controle_Fresadora_CNC+0
$0022	$3072			MOVLW	114
$0023	$00B9			MOVWF	lstr2_Controle_Fresadora_CNC+1
$0024	$3065			MOVLW	101
$0025	$00BA			MOVWF	lstr2_Controle_Fresadora_CNC+2
$0026	$3073			MOVLW	115
$0027	$00BB			MOVWF	lstr2_Controle_Fresadora_CNC+3
$0028	$3061			MOVLW	97
$0029	$00BC			MOVWF	lstr2_Controle_Fresadora_CNC+4
$002A	$3064			MOVLW	100
$002B	$00BD			MOVWF	lstr2_Controle_Fresadora_CNC+5
$002C	$306F			MOVLW	111
$002D	$00BE			MOVWF	lstr2_Controle_Fresadora_CNC+6
$002E	$3072			MOVLW	114
$002F	$00BF			MOVWF	lstr2_Controle_Fresadora_CNC+7
$0030	$3061			MOVLW	97
$0031	$00C0			MOVWF	lstr2_Controle_Fresadora_CNC+8
$0032	$3020			MOVLW	32
$0033	$00C1			MOVWF	lstr2_Controle_Fresadora_CNC+9
$0034	$3043			MOVLW	67
$0035	$00C2			MOVWF	lstr2_Controle_Fresadora_CNC+10
$0036	$304E			MOVLW	78
$0037	$00C3			MOVWF	lstr2_Controle_Fresadora_CNC+11
$0038	$3043			MOVLW	67
$0039	$00C4			MOVWF	lstr2_Controle_Fresadora_CNC+12
$003A	$01C5			CLRF	lstr2_Controle_Fresadora_CNC+13
$003B	$3042			MOVLW	66
$003C	$00C6			MOVWF	lstr3_Controle_Fresadora_CNC+0
$003D	$306F			MOVLW	111
$003E	$00C7			MOVWF	lstr3_Controle_Fresadora_CNC+1
$003F	$306D			MOVLW	109
$0040	$00C8			MOVWF	lstr3_Controle_Fresadora_CNC+2
$0041	$3062			MOVLW	98
$0042	$00C9			MOVWF	lstr3_Controle_Fresadora_CNC+3
$0043	$3061			MOVLW	97
$0044	$00CA			MOVWF	lstr3_Controle_Fresadora_CNC+4
$0045	$3020			MOVLW	32
$0046	$00CB			MOVWF	lstr3_Controle_Fresadora_CNC+5
$0047	$304C			MOVLW	76
$0048	$00CC			MOVWF	lstr3_Controle_Fresadora_CNC+6
$0049	$3069			MOVLW	105
$004A	$00CD			MOVWF	lstr3_Controle_Fresadora_CNC+7
$004B	$3067			MOVLW	103
$004C	$00CE			MOVWF	lstr3_Controle_Fresadora_CNC+8
$004D	$3061			MOVLW	97
$004E	$00CF			MOVWF	lstr3_Controle_Fresadora_CNC+9
$004F	$3064			MOVLW	100
$0050	$00D0			MOVWF	lstr3_Controle_Fresadora_CNC+10
$0051	$3061			MOVLW	97
$0052	$00D1			MOVWF	lstr3_Controle_Fresadora_CNC+11
$0053	$3021			MOVLW	33
$0054	$00D2			MOVWF	lstr3_Controle_Fresadora_CNC+12
$0055	$01D3			CLRF	lstr3_Controle_Fresadora_CNC+13
$0056	$3046			MOVLW	70
$0057	$00D4			MOVWF	lstr4_Controle_Fresadora_CNC+0
$0058	$3072			MOVLW	114
$0059	$00D5			MOVWF	lstr4_Controle_Fresadora_CNC+1
$005A	$3065			MOVLW	101
$005B	$00D6			MOVWF	lstr4_Controle_Fresadora_CNC+2
$005C	$3073			MOVLW	115
$005D	$00D7			MOVWF	lstr4_Controle_Fresadora_CNC+3
$005E	$3061			MOVLW	97
$005F	$00D8			MOVWF	lstr4_Controle_Fresadora_CNC+4
$0060	$3020			MOVLW	32
$0061	$00D9			MOVWF	lstr4_Controle_Fresadora_CNC+5
$0062	$304C			MOVLW	76
$0063	$00DA			MOVWF	lstr4_Controle_Fresadora_CNC+6
$0064	$3069			MOVLW	105
$0065	$00DB			MOVWF	lstr4_Controle_Fresadora_CNC+7
$0066	$3067			MOVLW	103
$0067	$00DC			MOVWF	lstr4_Controle_Fresadora_CNC+8
$0068	$3061			MOVLW	97
$0069	$00DD			MOVWF	lstr4_Controle_Fresadora_CNC+9
$006A	$3064			MOVLW	100
$006B	$00DE			MOVWF	lstr4_Controle_Fresadora_CNC+10
$006C	$3061			MOVLW	97
$006D	$00DF			MOVWF	lstr4_Controle_Fresadora_CNC+11
$006E	$3021			MOVLW	33
$006F	$00E0			MOVWF	lstr4_Controle_Fresadora_CNC+12
$0070	$01E1			CLRF	lstr4_Controle_Fresadora_CNC+13
$0071	$3048			MOVLW	72
$0072	$00E2			MOVWF	lstr5_Controle_Fresadora_CNC+0
$0073	$306F			MOVLW	111
$0074	$00E3			MOVWF	lstr5_Controle_Fresadora_CNC+1
$0075	$3072			MOVLW	114
$0076	$00E4			MOVWF	lstr5_Controle_Fresadora_CNC+2
$0077	$3061			MOVLW	97
$0078	$00E5			MOVWF	lstr5_Controle_Fresadora_CNC+3
$0079	$3073			MOVLW	115
$007A	$00E6			MOVWF	lstr5_Controle_Fresadora_CNC+4
$007B	$303A			MOVLW	58
$007C	$00E7			MOVWF	lstr5_Controle_Fresadora_CNC+5
$007D	$01E8			CLRF	lstr5_Controle_Fresadora_CNC+6
$007E	$3044			MOVLW	68
$007F	$00E9			MOVWF	lstr6_Controle_Fresadora_CNC+0
$0080	$3061			MOVLW	97
$0081	$00EA			MOVWF	lstr6_Controle_Fresadora_CNC+1
$0082	$3074			MOVLW	116
$0083	$00EB			MOVWF	lstr6_Controle_Fresadora_CNC+2
$0084	$3061			MOVLW	97
$0085	$00EC			MOVWF	lstr6_Controle_Fresadora_CNC+3
$0086	$303A			MOVLW	58
$0087	$00ED			MOVWF	lstr6_Controle_Fresadora_CNC+4
$0088	$01EE			CLRF	lstr6_Controle_Fresadora_CNC+5
;Controle_Fresadora_CNC.c,44 :: 		void main()
;Controle_Fresadora_CNC.c,46 :: 		Usart_Init(9600);
$0089	$3081			MOVLW	129
$008A	$1683			BSF	STATUS, RP0
$008B	$0099			MOVWF	SPBRG
$008C	$1518			BSF	TXSTA, BRGH
$008D	$2469			CALL	_Usart_Init
;Controle_Fresadora_CNC.c,47 :: 		trisc=0;
$008E	$1683			BSF	STATUS, RP0
$008F	$0187			CLRF	TRISC, 1
;Controle_Fresadora_CNC.c,48 :: 		trisd=0;
$0090	$0188			CLRF	TRISD, 1
;Controle_Fresadora_CNC.c,49 :: 		trise=0;
$0091	$0189			CLRF	TRISE, 1
;Controle_Fresadora_CNC.c,50 :: 		portc=0;
$0092	$1283			BCF	STATUS, RP0
$0093	$0187			CLRF	PORTC, 1
;Controle_Fresadora_CNC.c,51 :: 		adcon1=7;
$0094	$3007			MOVLW	7
$0095	$1683			BSF	STATUS, RP0
$0096	$009F			MOVWF	ADCON1
;Controle_Fresadora_CNC.c,52 :: 		trise=0;
$0097	$0189			CLRF	TRISE, 1
;Controle_Fresadora_CNC.c,53 :: 		porte=0;
$0098	$1283			BCF	STATUS, RP0
$0099	$0189			CLRF	PORTE, 1
;Controle_Fresadora_CNC.c,54 :: 		trisa=15;
$009A	$300F			MOVLW	15
$009B	$1683			BSF	STATUS, RP0
$009C	$0085			MOVWF	TRISA
;Controle_Fresadora_CNC.c,55 :: 		porta=0;
$009D	$1283			BCF	STATUS, RP0
$009E	$0185			CLRF	PORTA, 1
;Controle_Fresadora_CNC.c,57 :: 		lcd8_config(&portb,&portd,0,2,1,7,6,5,4,3,2,1,0);
$009F	$3006			MOVLW	PORTB
$00A0	$1683			BSF	STATUS, RP0
$00A1	$00A0			MOVWF	FARG_Lcd8_Init+0
$00A2	$3008			MOVLW	PORTD
$00A3	$00A1			MOVWF	FARG_Lcd8_Init+1
$00A4	$22F5			CALL	_Lcd8_Init
;Controle_Fresadora_CNC.c,58 :: 		lcd8_cmd(lcd_clear);
$00A5	$3001			MOVLW	1
$00A6	$1683			BSF	STATUS, RP0
$00A7	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$00A8	$238F			CALL	_Lcd8_Cmd
;Controle_Fresadora_CNC.c,59 :: 		lcd8_cmd(lcd_cursor_off);
$00A9	$300C			MOVLW	12
$00AA	$1683			BSF	STATUS, RP0
$00AB	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$00AC	$238F			CALL	_Lcd8_Cmd
;Controle_Fresadora_CNC.c,60 :: 		lcd8_out(1,1,"Fresadora CNC");
$00AD	$3001			MOVLW	1
$00AE	$1683			BSF	STATUS, RP0
$00AF	$00A0			MOVWF	FARG_Lcd8_Out+0
$00B0	$3001			MOVLW	1
$00B1	$00A1			MOVWF	FARG_Lcd8_Out+1
$00B2	$302A			MOVLW	lstr1_Controle_Fresadora_CNC
$00B3	$00A2			MOVWF	FARG_Lcd8_Out+2
$00B4	$23E0			CALL	_Lcd8_Out
;Controle_Fresadora_CNC.c,61 :: 		Usart_Write("Fresadora CNC");
$00B5	$3038			MOVLW	lstr2_Controle_Fresadora_CNC
$00B6	$1283			BCF	STATUS, RP0
$00B7	$00EF			MOVWF	FARG_Usart_Write+0
$00B8	$2459			CALL	_Usart_Write
;Controle_Fresadora_CNC.c,62 :: 		ds1307_init();  //Chama função para a inicialização do RTC
$00B9	$2488			CALL	_ds1307_init
;Controle_Fresadora_CNC.c,63 :: 		delay_ms(250);
$00BA	$3007			MOVLW	7
$00BB	$00FC			MOVWF	STACK_12
$00BC	$30FF			MOVLW	255
$00BD	$00FB			MOVWF	STACK_11
$00BE	$30FF			MOVLW	255
$00BF	$00FA			MOVWF	STACK_10
$00C0	$0BFC			DECFSZ	STACK_12, F
$00C1	$28C3			GOTO	$+2
$00C2	$28CA			GOTO	$+8
$00C3	$0BFB			DECFSZ	STACK_11, F
$00C4	$28C6			GOTO	$+2
$00C5	$28C9			GOTO	$+4
$00C6	$0BFA			DECFSZ	STACK_10, F
$00C7	$28C6			GOTO	$-1
$00C8	$28C3			GOTO	$-5
$00C9	$28C0			GOTO	$-9
$00CA	$3060			MOVLW	96
$00CB	$00FB			MOVWF	STACK_11
$00CC	$30FF			MOVLW	255
$00CD	$00FA			MOVWF	STACK_10
$00CE	$0BFB			DECFSZ	STACK_11, F
$00CF	$28D1			GOTO	$+2
$00D0	$28D4			GOTO	$+4
$00D1	$0BFA			DECFSZ	STACK_10, F
$00D2	$28D1			GOTO	$-1
$00D3	$28CE			GOTO	$-5
$00D4	$3014			MOVLW	20
$00D5	$00FA			MOVWF	STACK_10
$00D6	$0BFA			DECFSZ	STACK_10, F
$00D7	$28D6			GOTO	$-1
;Controle_Fresadora_CNC.c,65 :: 		ds1307_escreve();
$00D8	$2331			CALL	_ds1307_escreve
;Controle_Fresadora_CNC.c,68 :: 		while (1)
$00D9	$	L_main_0:
;Controle_Fresadora_CNC.c,70 :: 		if(porta.f0==0)
$00D9	$3001			MOVLW	1
$00DA	$1283			BCF	STATUS, RP0
$00DB	$0505			ANDWF	PORTA, 0
$00DC	$00F1			MOVWF	STACK_1
$00DD	$0871			MOVF	STACK_1, 0
$00DE	$3A00			XORLW	0
$00DF	$1D03			BTFSS	STATUS, Z
$00E0	$290D			GOTO	L_main_2
;Controle_Fresadora_CNC.c,72 :: 		porte.f0=1;
$00E1	$1409			BSF	PORTE, 0
;Controle_Fresadora_CNC.c,73 :: 		lcd8_cmd(lcd_clear);
$00E2	$3001			MOVLW	1
$00E3	$1683			BSF	STATUS, RP0
$00E4	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$00E5	$238F			CALL	_Lcd8_Cmd
;Controle_Fresadora_CNC.c,74 :: 		lcd8_out(1,1,"Bomba Ligada!");
$00E6	$3001			MOVLW	1
$00E7	$1683			BSF	STATUS, RP0
$00E8	$00A0			MOVWF	FARG_Lcd8_Out+0
$00E9	$3001			MOVLW	1
$00EA	$00A1			MOVWF	FARG_Lcd8_Out+1
$00EB	$3046			MOVLW	lstr3_Controle_Fresadora_CNC
$00EC	$00A2			MOVWF	FARG_Lcd8_Out+2
$00ED	$23E0			CALL	_Lcd8_Out
;Controle_Fresadora_CNC.c,75 :: 		delay_ms(200);
$00EE	$3006			MOVLW	6
$00EF	$00FC			MOVWF	STACK_12
$00F0	$30FF			MOVLW	255
$00F1	$00FB			MOVWF	STACK_11
$00F2	$30FF			MOVLW	255
$00F3	$00FA			MOVWF	STACK_10
$00F4	$0BFC			DECFSZ	STACK_12, F
$00F5	$28F7			GOTO	$+2
$00F6	$28FE			GOTO	$+8
$00F7	$0BFB			DECFSZ	STACK_11, F
$00F8	$28FA			GOTO	$+2
$00F9	$28FD			GOTO	$+4
$00FA	$0BFA			DECFSZ	STACK_10, F
$00FB	$28FA			GOTO	$-1
$00FC	$28F7			GOTO	$-5
$00FD	$28F4			GOTO	$-9
$00FE	$301A			MOVLW	26
$00FF	$00FB			MOVWF	STACK_11
$0100	$30FF			MOVLW	255
$0101	$00FA			MOVWF	STACK_10
$0102	$0BFB			DECFSZ	STACK_11, F
$0103	$2905			GOTO	$+2
$0104	$2908			GOTO	$+4
$0105	$0BFA			DECFSZ	STACK_10, F
$0106	$2905			GOTO	$-1
$0107	$2902			GOTO	$-5
$0108	$3042			MOVLW	66
$0109	$00FA			MOVWF	STACK_10
$010A	$0BFA			DECFSZ	STACK_10, F
$010B	$290A			GOTO	$-1
;Controle_Fresadora_CNC.c,76 :: 		}
$010C	$290F			GOTO	L_main_3
$010D	$	L_main_2:
;Controle_Fresadora_CNC.c,79 :: 		porte.f0=0;
$010D	$1283			BCF	STATUS, RP0
$010E	$1009			BCF	PORTE, 0
;Controle_Fresadora_CNC.c,80 :: 		}
$010F	$	L_main_3:
;Controle_Fresadora_CNC.c,83 :: 		if(porta.f1==0)
$010F	$1303			BCF	STATUS, RP1
$0110	$1283			BCF	STATUS, RP0
$0111	$3000			MOVLW	0
$0112	$1885			BTFSC	PORTA, 1
$0113	$3001			MOVLW	1
$0114	$00F1			MOVWF	STACK_1
$0115	$0871			MOVF	STACK_1, 0
$0116	$3A00			XORLW	0
$0117	$1D03			BTFSS	STATUS, Z
$0118	$2945			GOTO	L_main_4
;Controle_Fresadora_CNC.c,85 :: 		porte.f1=1;
$0119	$1489			BSF	PORTE, 1
;Controle_Fresadora_CNC.c,86 :: 		lcd8_cmd(lcd_clear);
$011A	$3001			MOVLW	1
$011B	$1683			BSF	STATUS, RP0
$011C	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$011D	$238F			CALL	_Lcd8_Cmd
;Controle_Fresadora_CNC.c,87 :: 		lcd8_out(2,1,"Fresa Ligada!");
$011E	$3002			MOVLW	2
$011F	$1683			BSF	STATUS, RP0
$0120	$00A0			MOVWF	FARG_Lcd8_Out+0
$0121	$3001			MOVLW	1
$0122	$00A1			MOVWF	FARG_Lcd8_Out+1
$0123	$3054			MOVLW	lstr4_Controle_Fresadora_CNC
$0124	$00A2			MOVWF	FARG_Lcd8_Out+2
$0125	$23E0			CALL	_Lcd8_Out
;Controle_Fresadora_CNC.c,88 :: 		delay_ms(200);
$0126	$3006			MOVLW	6
$0127	$00FC			MOVWF	STACK_12
$0128	$30FF			MOVLW	255
$0129	$00FB			MOVWF	STACK_11
$012A	$30FF			MOVLW	255
$012B	$00FA			MOVWF	STACK_10
$012C	$0BFC			DECFSZ	STACK_12, F
$012D	$292F			GOTO	$+2
$012E	$2936			GOTO	$+8
$012F	$0BFB			DECFSZ	STACK_11, F
$0130	$2932			GOTO	$+2
$0131	$2935			GOTO	$+4
$0132	$0BFA			DECFSZ	STACK_10, F
$0133	$2932			GOTO	$-1
$0134	$292F			GOTO	$-5
$0135	$292C			GOTO	$-9
$0136	$301A			MOVLW	26
$0137	$00FB			MOVWF	STACK_11
$0138	$30FF			MOVLW	255
$0139	$00FA			MOVWF	STACK_10
$013A	$0BFB			DECFSZ	STACK_11, F
$013B	$293D			GOTO	$+2
$013C	$2940			GOTO	$+4
$013D	$0BFA			DECFSZ	STACK_10, F
$013E	$293D			GOTO	$-1
$013F	$293A			GOTO	$-5
$0140	$3042			MOVLW	66
$0141	$00FA			MOVWF	STACK_10
$0142	$0BFA			DECFSZ	STACK_10, F
$0143	$2942			GOTO	$-1
;Controle_Fresadora_CNC.c,89 :: 		}
$0144	$2947			GOTO	L_main_5
$0145	$	L_main_4:
;Controle_Fresadora_CNC.c,92 :: 		porte.f1=0;
$0145	$1283			BCF	STATUS, RP0
$0146	$1089			BCF	PORTE, 1
;Controle_Fresadora_CNC.c,93 :: 		}
$0147	$	L_main_5:
;Controle_Fresadora_CNC.c,94 :: 		if(porta.f3==0)
$0147	$1303			BCF	STATUS, RP1
$0148	$1283			BCF	STATUS, RP0
$0149	$3000			MOVLW	0
$014A	$1985			BTFSC	PORTA, 3
$014B	$3001			MOVLW	1
$014C	$00F1			MOVWF	STACK_1
$014D	$0871			MOVF	STACK_1, 0
$014E	$3A00			XORLW	0
$014F	$1D03			BTFSS	STATUS, Z
$0150	$2983			GOTO	L_main_6
;Controle_Fresadora_CNC.c,96 :: 		lcd8_cmd(lcd_clear);
$0151	$3001			MOVLW	1
$0152	$1683			BSF	STATUS, RP0
$0153	$00A9			MOVWF	FARG_Lcd8_Cmd+0
$0154	$238F			CALL	_Lcd8_Cmd
;Controle_Fresadora_CNC.c,97 :: 		lcd8_out(1,1,"Horas:");
$0155	$3001			MOVLW	1
$0156	$1683			BSF	STATUS, RP0
$0157	$00A0			MOVWF	FARG_Lcd8_Out+0
$0158	$3001			MOVLW	1
$0159	$00A1			MOVWF	FARG_Lcd8_Out+1
$015A	$3062			MOVLW	lstr5_Controle_Fresadora_CNC
$015B	$00A2			MOVWF	FARG_Lcd8_Out+2
$015C	$23E0			CALL	_Lcd8_Out
;Controle_Fresadora_CNC.c,98 :: 		lcd8_out(2,1,"Data:");
$015D	$3002			MOVLW	2
$015E	$00A0			MOVWF	FARG_Lcd8_Out+0
$015F	$3001			MOVLW	1
$0160	$00A1			MOVWF	FARG_Lcd8_Out+1
$0161	$3069			MOVLW	lstr6_Controle_Fresadora_CNC
$0162	$00A2			MOVWF	FARG_Lcd8_Out+2
$0163	$23E0			CALL	_Lcd8_Out
;Controle_Fresadora_CNC.c,99 :: 		horario();
$0164	$21AE			CALL	_horario
;Controle_Fresadora_CNC.c,100 :: 		delay_ms(200);
$0165	$3006			MOVLW	6
$0166	$00FC			MOVWF	STACK_12
$0167	$30FF			MOVLW	255
$0168	$00FB			MOVWF	STACK_11
$0169	$30FF			MOVLW	255
$016A	$00FA			MOVWF	STACK_10
$016B	$0BFC			DECFSZ	STACK_12, F
$016C	$296E			GOTO	$+2
$016D	$2975			GOTO	$+8
$016E	$0BFB			DECFSZ	STACK_11, F
$016F	$2971			GOTO	$+2
$0170	$2974			GOTO	$+4
$0171	$0BFA			DECFSZ	STACK_10, F
$0172	$2971			GOTO	$-1
$0173	$296E			GOTO	$-5
$0174	$296B			GOTO	$-9
$0175	$301A			MOVLW	26
$0176	$00FB			MOVWF	STACK_11
$0177	$30FF			MOVLW	255
$0178	$00FA			MOVWF	STACK_10
$0179	$0BFB			DECFSZ	STACK_11, F
$017A	$297C			GOTO	$+2
$017B	$297F			GOTO	$+4
$017C	$0BFA			DECFSZ	STACK_10, F
$017D	$297C			GOTO	$-1
$017E	$2979			GOTO	$-5
$017F	$3042			MOVLW	66
$0180	$00FA			MOVWF	STACK_10
$0181	$0BFA			DECFSZ	STACK_10, F
$0182	$2981			GOTO	$-1
;Controle_Fresadora_CNC.c,101 :: 		}
$0183	$	L_main_6:
;Controle_Fresadora_CNC.c,102 :: 		if(porta.f2==0)
$0183	$3000			MOVLW	0
$0184	$1905			BTFSC	PORTA, 2
$0185	$3001			MOVLW	1
$0186	$00F1			MOVWF	STACK_1
$0187	$0871			MOVF	STACK_1, 0
$0188	$3A00			XORLW	0
$0189	$1D03			BTFSS	STATUS, Z
$018A	$29AB			GOTO	L_main_7
;Controle_Fresadora_CNC.c,104 :: 		porte.f2=0;
$018B	$1109			BCF	PORTE, 2
;Controle_Fresadora_CNC.c,105 :: 		delay_ms(200);
$018C	$3006			MOVLW	6
$018D	$00FC			MOVWF	STACK_12
$018E	$30FF			MOVLW	255
$018F	$00FB			MOVWF	STACK_11
$0190	$30FF			MOVLW	255
$0191	$00FA			MOVWF	STACK_10
$0192	$0BFC			DECFSZ	STACK_12, F
$0193	$2995			GOTO	$+2
$0194	$299C			GOTO	$+8
$0195	$0BFB			DECFSZ	STACK_11, F
$0196	$2998			GOTO	$+2
$0197	$299B			GOTO	$+4
$0198	$0BFA			DECFSZ	STACK_10, F
$0199	$2998			GOTO	$-1
$019A	$2995			GOTO	$-5
$019B	$2992			GOTO	$-9
$019C	$301A			MOVLW	26
$019D	$00FB			MOVWF	STACK_11
$019E	$30FF			MOVLW	255
$019F	$00FA			MOVWF	STACK_10
$01A0	$0BFB			DECFSZ	STACK_11, F
$01A1	$29A3			GOTO	$+2
$01A2	$29A6			GOTO	$+4
$01A3	$0BFA			DECFSZ	STACK_10, F
$01A4	$29A3			GOTO	$-1
$01A5	$29A0			GOTO	$-5
$01A6	$3042			MOVLW	66
$01A7	$00FA			MOVWF	STACK_10
$01A8	$0BFA			DECFSZ	STACK_10, F
$01A9	$29A8			GOTO	$-1
;Controle_Fresadora_CNC.c,106 :: 		}
$01AA	$29AC			GOTO	L_main_8
$01AB	$	L_main_7:
;Controle_Fresadora_CNC.c,109 :: 		porte.f2=1;
$01AB	$1509			BSF	PORTE, 2
;Controle_Fresadora_CNC.c,110 :: 		}
$01AC	$	L_main_8:
;Controle_Fresadora_CNC.c,111 :: 		} //fim while
$01AC	$28D9			GOTO	L_main_0
;Controle_Fresadora_CNC.c,112 :: 		}
$01AD	$29AD			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		main
$01AE		horario
$02BA		ds1307_leitura
$02F5		Lcd8_Init
$0331		ds1307_escreve
$0359		Lcd8_Chr
$038F		Lcd8_Cmd
$03BA		I2C_Start
$03E0		Lcd8_Out
$03FE		I2C_Wr
$0419		I2C_Rd
$0432		I2C_Is_Idle
$0448		Delay_5500us
$0459		Usart_Write
$0469		Usart_Init
$0479		GlobalIniControle_Fresadora_CNC
$0488		ds1307_init
$048E		I2C_Init
$0498		Delay_1us
$04A0		I2C_Repeated_Start
$04A8		Delay_50us
$04AF		I2C_Stop


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_main:
$00D9		L_main_0:
$010D		L_main_2:
$010F		L_main_3:
$0145		L_main_4:
$0147		L_main_5:
$0183		L_main_6:
$01AB		L_main_7:
$01AC		L_main_8:
$01AE		_horario:
$02BA		_ds1307_leitura:
$02F5		_Lcd8_Init:
$0331		_ds1307_escreve:
$0359		_Lcd8_Chr:
$035A		L_Lcd8_Chr_6:
$035F		L_Lcd8_Chr_7:
$0362		L_Lcd8_Chr_8:
$0365		L_Lcd8_Chr_9:
$0368		L_Lcd8_Chr_10:
$036B		L_Lcd8_Chr_4:
$037E		L_Lcd8_Chr_5:
$038F		_Lcd8_Cmd:
$0398		L_Lcd8_Cmd_0:
$03B0		L_Lcd8_Cmd_1:
$03B8		L_Lcd8_Cmd_2:
$03B9		L_Lcd8_Cmd_3:
$03BA		_I2C_Start:
$03BE		L_I2C_Start_2:
$03C4		L_I2C_Start_23:
$03CA		L_I2C_Start_4:
$03CA		L_I2C_Start_5:
$03CE		L_I2C_Start_3:
$03D4		L_I2C_Start_24:
$03D9		L_I2C_Start_6:
$03DA		L_I2C_Start_8:
$03DE		L_I2C_Start_9:
$03E0		_Lcd8_Out:
$03E7		L_Lcd8_Out_11:
$03FD		L_Lcd8_Out_12:
$03FE		_I2C_Wr:
$0404		L_I2C_Wr_17:
$0407		L_I2C_Wr_18:
$0407		L_I2C_Wr_19:
$040A		L_I2C_Wr_20:
$0415		L_I2C_Wr_21:
$0419		_I2C_Rd:
$041E		L_I2C_Rd_12:
$0420		L_I2C_Rd_13:
$0429		L_I2C_Rd_14:
$042C		L_I2C_Rd_15:
$042E		L_I2C_Rd_16:
$0432		_I2C_Is_Idle:
$0446		L_I2C_Is_Idle_0:
$0446		L_I2C_Is_Idle_1:
$0448		_Delay_5500us:
$0459		_Usart_Write:
$0459		L_Usart_Write_3:
$0465		L_Usart_Write_4:
$0469		_Usart_Init:
$0472		L_Usart_Init_0:
$0478		L_Usart_Init_1:
$0479		GlobalIniControle_Fresadora_CNC:
$0488		_ds1307_init:
$048E		_I2C_Init:
$0498		_Delay_1us:
$04A0		_I2C_Repeated_Start:
$04A3		L_I2C_Repeated_Start_10:
$04A7		L_I2C_Repeated_Start_11:
$04A8		_Delay_50us:
$04AF		_I2C_Stop:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0005		PORTA
$0006		PORTB
$0007		PORTC
$0008		PORTD
$0009		PORTE
$000A		PCLATH
$000C		PIR1
$0013		SSPBUF
$0014		SSPCON
$0018		RCSTA
$0019		TXREG
$001A		RCREG
$0020		lcd8bit_DataAddress
$0021		lcd8bit_CtrlAddress
$0022		_com
$0023		_segundo
$0024		_minuto
$0025		_hora
$0026		_semana
$0027		_dia
$0028		_mes
$0029		_ano
$002A		lstr1_Controle_Fresadora_CNC
$0038		lstr2_Controle_Fresadora_CNC
$0046		lstr3_Controle_Fresadora_CNC
$0054		lstr4_Controle_Fresadora_CNC
$0062		lstr5_Controle_Fresadora_CNC
$0069		lstr6_Controle_Fresadora_CNC
$006F		FARG_Usart_Write+0
$006F		Usart_Init_tmp_L0
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0085		TRISA
$0087		TRISC
$0088		TRISD
$0089		TRISE
$0091		SSPCON2
$0093		SSPADD
$0094		SSPSTAT
$0098		TXSTA
$0099		SPBRG
$009F		ADCON1
$00A0		FARG_Lcd8_Init+0
$00A0		FARG_Lcd8_Out+0
$00A0		FARG_Usart_Init+0
$00A1		FARG_Lcd8_Init+1
$00A1		FARG_Lcd8_Out+1
$00A2		FARG_Lcd8_Out+2
$00A3		Lcd8_Out_i_L0
$00A4		Lcd8_Out_j_L0
$00A5		FARG_I2C_Init+0
$00A5		FARG_Lcd8_Chr+0
$00A6		FARG_Lcd8_Chr+1
$00A7		FARG_Lcd8_Chr+2
$00A9		FARG_I2C_Rd+0
$00A9		FARG_I2C_Wr+0
$00A9		FARG_Lcd8_Cmd+0
$00A9		I2C_Start_j_L0
$00AA		I2C_Rd_tmp_L0


